// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl

/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM16K {
    IN in[16], load, address[14];
    OUT out[16];

    PARTS:
    // Put your code here:

	DMux8Way(in=load,sel=address[11..13],a=shouldLoad1,b=shouldLoad2,c=shouldLoad3,d=shouldLoad4,e=shouldLoad5,f=shouldLoad6,g=shouldLoad7,h=shouldLoad8);

    RAM4K(in=in,load=shouldLoad1,address=address[0..11],out=out1);
    RAM4K(in=in,load=shouldLoad2,address=address[0..11],out=out2);
    RAM4K(in=in,load=shouldLoad3,address=address[0..11],out=out3);
    RAM4K(in=in,load=shouldLoad4,address=address[0..11],out=out4);
    RAM4K(in=in,load=shouldLoad5,address=address[0..11],out=out5);
    RAM4K(in=in,load=shouldLoad6,address=address[0..11],out=out6);
    RAM4K(in=in,load=shouldLoad7,address=address[0..11],out=out7);
    RAM4K(in=in,load=shouldLoad8,address=address[0..11],out=out8);

    Mux8Way16(a=out1,b=out2,c=out3,d=out4,e=out5,f=out6,g=out7,h=out8,sel=address[11..13],out=out);
}